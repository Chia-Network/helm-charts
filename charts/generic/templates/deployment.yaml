{{- $fullName := include "generic.fullname" . -}}
{{- $shortName := include "generic.shortname" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "generic.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "generic.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "generic.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "generic.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.mysql.enabled }}
      initContainers:
        - name: initdb
          image: ghcr.io/cmmarslender/mysql-init
          envFrom:
            - secretRef:
                name: {{ $shortName }}-mysql-root
            - secretRef:
                name: {{ $shortName }}-mysql-user
            - secretRef:
                name: {{ $shortName }}-mysql-read
            - secretRef:
                name: {{ $shortName }}-mysql-info
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.deployment.containerPort }}
              protocol: TCP
          {{- with .Values.deployment.environment }}
          env:
            {{- range $key, $value := . }}
            - name: "{{ $key }}"
              value: "{{ $value }}"
            {{- end }}
          {{- end }}
          envFrom:
            - secretRef:
                name: "{{ .Release.Name }}-env"
                optional: false
            - configMapRef:
                name: "{{ .Release.Name }}-env"
            {{- if .Values.mysql.enabled }}
            - secretRef:
                name: {{ $shortName }}-mysql-user
                optional: false
            - secretRef:
                name: {{ $shortName }}-mysql-info
                optional: false
            {{- end }}
          volumeMounts:
            - name: secret-file
              mountPath: {{ .Values.secretFile.mountPath }}
            - name: configmap-file
              mountPath: {{ .Values.configmapFile.mountPath }}
            {{- range .Values.volumes }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              readOnly: {{ .readOnly }}
            {{- end }}
            {{- range .Values.sidecars }}
            {{- $sidecarName := .name -}}
            {{- range .sharedEmptyDirs }}
            - name: {{ $sidecarName }}-{{ .name }}
              mountPath: {{ .mountPath }}
            {{- end }}
            {{- end }}
          {{- with .Values.deployment.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.deployment.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        {{- range .Values.sidecars -}}
        {{- $sidecarName := .name }}
        - name: {{ $sidecarName }}
          securityContext:
            {{- toYaml $.Values.securityContext | nindent 12 }}
          image: "{{ .image.repository }}:{{ .image.tag }}"
          imagePullPolicy: {{ .image.pullPolicy }}
          {{- with .environment }}
          env:
            {{- range $key, $value := . }}
            - name: "{{ $key }}"
              value: "{{ $value }}"
            {{- end }}
          {{- end }}
          envFrom:
            - secretRef:
                name: "{{ $.Release.Name }}-env"
                optional: false
            {{- range $.Values.externalSecretEnvironment }}
            - secretRef:
                name: "{{ .name }}"
            {{- end }}
            - configMapRef:
                name: "{{ $.Release.Name }}-env"
            {{- range $.Values.externalConfigmapEnvironment }}
            - configMapRef:
                name: "{{ .name }}"
            {{- end }}
            {{- if $.Values.mysql.enabled }}
            - secretRef:
                name: {{ $shortName }}-mysql-user
                optional: false
            - secretRef:
                name: {{ $shortName }}-mysql-info
                optional: false
            {{- end }}
          volumeMounts:
            - name: secret-file
              mountPath: {{ $.Values.secretFile.mountPath }}
            - name: configmap-file
              mountPath: {{ $.Values.configmapFile.mountPath }}
            {{- range $.Values.volumes }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              readOnly: {{ .readOnly }}
            {{- end }}
            {{- range .sharedEmptyDirs }}
            - name: {{ $sidecarName }}-{{ .name }}
              mountPath: {{ .mountPath }}
            {{- end }}
        {{- end }}
      volumes:
        - name: secret-file
          secret:
            secretName: "{{ .Release.Name }}-file"
        - name: configmap-file
          configMap:
            name: "{{ .Release.Name }}-file"
        {{- range .Values.volumes }}
        - name: {{ .name }}
          persistentVolumeClaim:
            claimName: {{ $fullName }}-{{ .name }}
        {{- end }}
        {{- range .Values.sidecars }}
        {{- $sidecarName := .name -}}
        {{- range .sharedEmptyDirs }}
        - name: {{ $sidecarName }}-{{ .name }}
          emptyDir: {}
        {{- end }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
